#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Wed Mar  9 16:50:00 2022@author: chiaracorsini"""import numpy as npclass Functions:        def __init__(self, a, b, c):                self.a = a        self.b = b        self.c = c            def trasla (self, modnt):                self.a += modnt[0]        self.b += modnt[1]        self.c += modnt[2]                    def ruota (self, modnr, var):                def r_matrix (modnr):                    R1 = np.zeros((3,3))            R2 = np.zeros((3,3))            R3 = np.zeros((3,3))                    R1[0,:] = [1,0,0]            R1[1,:] = [0,np.cos(modnr[0]),-np.sin(modnr[0])]            R1[2,:] = [0,np.sin(modnr[0]),np.cos(modnr[0])]                R2[0,:] = [np.cos(modnr[1]),0,np.sin(modnr[1])]            R2[1,:] = [0,1,0]            R2[2,:] = [-np.sin(modnr[1]),0,np.cos(modnr[1])]                R3[0,:] = [np.cos(modnr[2]),-np.sin(modnr[2]),0]            R3[1,:] = [np.sin(modnr[2]),np.cos(modnr[2]),0]            R3[2,:] = [0,0,1]                        return R1, R2, R3                a_iniz=self.a.copy()        b_iniz=self.b.copy()        c_iniz=self.c.copy()                a0=np.mean(a_iniz)        b0=np.mean(b_iniz)        c0=np.mean(c_iniz)              R1, R2, R3 = r_matrix(modnr)            for j in range(len(self.a)):            x = [self.a[j],self.b[j],self.c[j]]                        Rxy = np.dot(R1, R2)            Rxyz = np.dot(Rxy, R3)            x_rot= np.dot(Rxyz, x)                        self.a[j] = x_rot[0]            self.b[j] = x_rot[1]            self.c[j] = x_rot[2]                                if var == 1 :                        a1=np.mean(self.a)            b1=np.mean(self.b)            c1=np.mean(self.c)            self.a = self.a - (a1-a0)            self.b = self.b - (b1-b0)            self.c = self.c - (c1-c0)       