import pytestimport globimport functions as fc#import data as dtimport numpy as np#from numpy import testing#@pytest.fixturedef pytest_generate_tests(metafunc):    """Get .xyz file names"""    filelist = glob.glob('test-files/*.xyz')    metafunc.parametrize("fileName", filelist )@pytest.fixture    def retreive_data(fileName):    """Get data from .xyz files"""    data = np.genfromtxt(fileName, skip_header=2, dtype='str')    el = data[:,0]    a = data[:,1].astype(float)    b = data[:,2].astype(float)    c = data[:,3].astype(float)    return(el, a, b, c)    @pytest.mark.parametrize('modnt', [np.array([2., 7., 20.]),                                    np.array([-10., 70000., 0.])])def test_trasla(retreive_data, modnt):    '''Checking that trasla actually translates'''    el, a, b, c = retreive_data        a_test = a+modnt[0]    b_test = b+modnt[1]    c_test = c+modnt[2]    #print('DATAAAAA test' , a_test, b_test, c_test)        a_tr, b_tr, c_tr = fc.trasla(a, b, c, modnt)        #print('DATAAAAA trasl', a_tr, b_tr, c_tr)        np.testing.assert_array_almost_equal(a_test, a_tr)    np.testing.assert_array_almost_equal(b_test, b_tr)    np.testing.assert_array_almost_equal(c_test, c_tr)